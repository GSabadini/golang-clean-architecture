version: "3.7"

services:
  app:
    container_name: golang-clean-architecture
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - .env
    volumes:
      - .:/app

  mongodb-primary:
    container_name: mongodb-primary
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    ports:
      - "27017:27017"
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'

  mongodb-secondary:
    container_name: mongodb-secondary
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    container_name: mongodb-arbiter
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  rabbitmq:
    container_name: "rabbitmq"
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./_scripts/rabbitmq/rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config

volumes:
  mongodb_master_data:
    driver: local